{"version":3,"sources":["components/Customization.tsx","components/FAQ.tsx","assets/pencil.svg","components/Header.tsx","components/Output.tsx","components/Page.tsx","App.tsx","index.tsx"],"names":["Customization","styles","setStyles","className","type","min","defaultValue","placeholder","onChange","e","parseInt","target","value","preventDefault","fontSize","inkColor","verticalSpacing","effect","fontFamily","title","defaultChecked","checked","margin","onClick","lines","FAQ","id","htmlFor","href","Header","onInit","typewriter","typeString","pauseFor","start","document","querySelectorAll","scrollIntoView","style","width","height","src","Pencil","Output","array","useEffect","length","outputImages","list","forEach","image","toDataURL","replace","innerHTML","alert","Page","setArray","pageElement","pageContent","pageOverlay","tm","lm","generateCanvas","a","border","overflowY","display","background","Math","floor","random","element","options","scrollX","scrollY","window","useCORS","html2canvas","then","canvas","setTimeout","paddingLeft","classList","remove","add","backgroundImage","contentEditable","color","paddingTop","App","checkBoxAuto","click","console","log","mobile","innerWidth","useState","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ef02eaed.chunk.js","sourcesContent":["import { parse } from \"node:path\";\nimport React from \"react\";\n\ninterface Props {\n  styles: {\n    fontSize: number;\n    effect: string;\n    inkColor: string;\n    fontFamily: string;\n    verticalSpacing: number;\n    margin: boolean;\n    lines: boolean;\n  };\n  setStyles: React.Dispatch<React.SetStateAction<any>>;\n}\n\nconst Customization: React.FC<Props> = ({ styles, setStyles }) => {\n  return (\n    <div className=\"customization w-1/2\">\n      <h2 className=\"text-2xl pl-36 font-bold mb-10\">Customizations</h2>\n      <div className=\"flex justify-around\">\n        <div className=\"flex-col\">\n          <h4>Font Size :</h4>\n          <input\n            type=\"number\"\n            min={0}\n            defaultValue={10}\n            className=\"rounded-full fontSize py-1 px-2 mt-2\"\n            placeholder=\"10\"\n            onChange={(e) => {\n              if (parseInt(e.target.value) < 25) {\n                e.preventDefault();\n                setStyles({ ...styles, fontSize: e.target.value });\n              }\n            }}\n          />\n        </div>\n        <div className=\"flex-col\">\n          <h4>Ink color :</h4>\n          <select\n            className=\"ink rounded-full py-1 px-2 mt-2\"\n            defaultValue=\"#000f55\"\n            onChange={(e) => setStyles({ ...styles, inkColor: e.target.value })}\n          >\n            <option value=\"#000f55\">Blue</option>\n            <option value=\"red\">Red</option>\n            <option value=\"black\">Black</option>\n          </select>\n        </div>\n      </div>\n      <div className=\"flex justify-around pt-10\">\n        <div className=\"flex-col\">\n          <h4>Vertical Spacing :</h4>\n          <input\n            type=\"number\"\n            defaultValue={3}\n            className=\"rounded-full verticalSpacing py-1 px-2 mt-2\"\n            placeholder=\"3\"\n            onChange={(e) =>\n              setStyles({ ...styles, verticalSpacing: e.target.value })\n            }\n          />\n        </div>\n        <div className=\"flex-col\">\n          <h4>Effects :</h4>\n          <select\n            className=\"effect rounded-full py-1 px-2 mt-2\"\n            defaultValue=\"shadow\"\n            onChange={(e) => setStyles({ ...styles, effect: e.target.value })}\n          >\n            <option value=\"shadow\">Shadow</option>\n            <option value=\"scanner\">Scanner</option>\n            <option value=\"no-effect\">No-effect</option>\n          </select>\n        </div>\n      </div>\n      <div className=\"flex justify-around pt-10 -ml-14\">\n        <div className=\"flex-col\">\n          <h4>Font Family :</h4>\n          <select\n            className=\"fontFamily rounded-full py-1 px-2 mt-2\"\n            defaultValue=\"Homemade apple\"\n            onChange={(e) =>\n              setStyles({ ...styles, fontFamily: e.target.value })\n            }\n          >\n            <option value=\"Homemade apple\">Homemade apple</option>\n            <option value=\"Caveat\">Caveat</option>\n            <option value=\"Shadows Into Light\">Shawdows Into Light</option>\n\n          </select>\n        </div>\n        <div className=\"upload flex-col -ml-28\">\n          <h4>Upload :</h4>\n          <input\n            className=\"mt-2 rounded-full bg-transparent text-white\"\n            type=\"file\"\n            value=\"\"\n            title=\" \"\n          />\n        </div>\n      </div>\n      <div className=\"flex justify-around pt-10 -ml-16\">\n        <div className=\"flex-col pr-2\">\n          <h4>Paper Margin: </h4>\n          <label className=\"switch mt-2\">\n            <input\n              type=\"checkbox\"\n              defaultChecked={true}\n              checked={styles.margin}\n              onClick={(e) => setStyles({ ...styles, margin: !styles.margin })}\n            />\n            <span className=\"slider round\"></span>\n          </label>\n        </div>\n        <div className=\"flex-col -ml-20\">\n          <h4>Paper Lines: </h4>\n          <label className=\"switch mt-2\">\n            <input\n              className=\"checkbox\"\n              type=\"checkbox\"\n              defaultChecked={true}\n              checked={styles.lines}\n              onClick={(e) => setStyles({ ...styles, lines: !styles.lines })}\n            />\n            <span className=\"slider round\"></span>\n          </label>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Customization;\n","import React from 'react';\n\nconst FAQ : React.FC = () => {\n    return(\n    <div className=\"container mx-28\">\n        <div className=\"faq-header\">Frequently Asked Questions</div>\n        \n        <div className=\"faq-content\">\n          <div className=\"faq-question\">\n            <input id=\"q1\" type=\"checkbox\" className=\"panel\" />\n            <div className=\"plus\">+</div>\n            <label  htmlFor=\"q1\" className=\"panel-title\">How can I add my own handwriting?</label>\n            <div className=\"panel-content\">\n              <li>To use your own handwriting you will have to generate your own font</li>\n              <li>Check out the websites like https://www.calligraphr.com/en/ that let's you do that. </li>\n              <li>Once you generate .ttf file then upload it in the Customization section.</li>\n            </div>\n          </div>\n          \n          {/* <div className=\"faq-question\">\n            <input id=\"q2\" type=\"checkbox\" className=\"panel\" />\n            <div className=\"plus\">+</div>\n            <label htmlFor=\"q2\" className=\"panel-title\">How can I get more fonts?</label>\n            <div className=\"panel-content\">Checkout google fonts and download the font which you like or which is close to your type of handwriting.<br /> Upload the .ttf file in the Customization section and you are good to go.</div>\n          </div> */}\n          \n          <div className=\"faq-question\">\n            <input id=\"q3\" type=\"checkbox\" className=\"panel\" />\n            <div className=\"plus\">+</div>\n            <label  htmlFor=\"q3\" className=\"panel-title\">Where can I report bug or request feature?</label>\n            <div className=\"panel-content\">\n              This is the best place where you can create an issue for it.<br/>\n              https://github.com/imrishabh18/text-to-handwriting/issues/new\n            </div>\n          </div>\n        </div>\n\n        <div className=\"star mt-8 px-4 text-lg mb-32\">\n          If you liked this tool and are using it, please do give it a GitHub star <a href=\"\" className=\"text-blue-400\" >here</a>. \n          <br/> Also, if you get caught by your teacher, tell them to star the repository as well. 😆\n        </div>\n        <div className=\"flex justify-center end\">\n          Created with ❤️ by <a className=\"pl-1 pb-1 font-bold\" href=\"https://imrishabh18.github.io\"> Rishabh</a>\n        </div>\n    </div>\n    )\n}\n\nexport default FAQ","export default __webpack_public_path__ + \"static/media/pencil.c740dbff.svg\";","import React from \"react\";\nimport { transform } from \"typescript\";\nimport Typewriter from \"typewriter-effect\";\nimport Pencil from \"../assets/pencil.svg\";\n\nconst Header: React.FC = () => {\n  const scroll = () => {\n    const top: HTMLElement = document.querySelectorAll(\".customization\")[0] as HTMLElement;\n    top.scrollIntoView()\n  }\n  return (\n    <div className=\"header\">\n      <div className=\"Navbar sticky top-0 flex justify-between items-center px-28\">\n        <h4 className=\"logo text-white font-bold text-3xl\">\n          Text to Handwriting ✍🏻\n        </h4>\n        <a href=\"https://github.com/imrishabh18/text-to-handwriting\">\n          <h5 className=\"text-white font-bold text-2xl\">GitHub</h5>\n        </a>\n      </div>\n      <div className=\"banner flex items-center\">\n        <div className=\"flex-1 w-1/5 px-32\">\n          <h1 className=\"font-medium text-7xl w-3/5 pb-10\">\n            <Typewriter\n              onInit={(typewriter) => {\n                typewriter\n                  .typeString(\"Text to Handwriting!\")\n                  .pauseFor(4500)\n                  // .deleteAll()\n                  .start();\n              }}\n            />\n          </h1>\n          <div className=\"startNow pt-10\">\n            <button onClick={scroll} className=\"rounded-full px-4 py-2 font-semibold text-xl\">Try now</button>\n          </div>\n        </div>\n        <img\n          className=\"flex-1\"\n          style={{ width: \"200px\", height: \"650px\" }}\n          src={Pencil}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useEffect } from \"react\";\n\ninterface Props {\n  array: Array<any>;\n}\n\nconst Output: React.FC<Props> = ({ array }) => {\n  useEffect(() => {\n    if( array.length > 0 && array.length <= 4){\n        const outputImages: HTMLElement = document.querySelectorAll(\n            \".array\"\n          )[0] as HTMLElement;\n          var list = `<div class=\"here\" style=\"display: flex; justify-content: space-between;\" >`;\n          array.forEach((image: any) => {\n            list += `\n                  <div style=\"height: 100px !important; position: relative;\">\n                    <img src=${image.toDataURL(\n                      \"image/png\"\n                    )} class=\"outputImage\" style=\"height: 250px; width: 175px;\" />\n                    <a\n                    download=\"image.png\"\n                    class=\"downloadButton\"\n                    style=\"position: absolute;top: 270px;background-color: #006eb8 !important;border-radius: 20px;padding: 15px;color: white;\"\n                    href=${image\n                      .toDataURL(\"image/png\")\n                      .replace(\"image/png\", \"image/oct\")}\n                    >\n                      Download Image\n                    </a>\n                  </div>\n              `;\n          });\n          list += `</div>`;\n          outputImages.innerHTML = list;\n    }else if (array.length > 4){\n        alert(\"Sorry, reload the browser to render more images\")\n    }\n  }, [array]);\n  return (\n    <div className=\"output relative w-4/6 mx-32\">\n      <h1 className=\"text-4xl pt-10 pb-4\">Output</h1>\n      { array.length > 0 ? <div className=\"array\"></div> : <div className=\"noOutput mt-10 border-gray-100 border-2 text-gray-400 text-2xl flex justify-center items-center h-4/6\">\n          No output\n      </div> }\n    </div>\n  );\n};\n\nexport default Output;\n","import React, { useEffect, useRef } from \"react\";\nimport html2canvas from \"html2canvas\";\nimport { image } from \"html2canvas/dist/types/css/types/image\";\nimport { backgroundSize } from \"html2canvas/dist/types/css/property-descriptors/background-size\";\n\ninterface Props {\n  styles: {\n    fontSize: number;\n    effect: string;\n    inkColor: string;\n    fontFamily: string;\n    verticalSpacing: number;\n    margin: boolean;\n    lines: boolean;\n  };\n  array: Array<any>;\n  setArray: React.Dispatch<React.SetStateAction<any>>;\n}\n\n\nconst Page: React.FC<Props> = ({styles, array, setArray}) => {\n  const pageElement: HTMLElement = document.querySelectorAll(\n    \".pinkMarginedLines\"\n  )[0] as HTMLElement;\n  const pageContent: HTMLElement = document.querySelectorAll(\n    \".contentPage\"\n  )[0] as HTMLElement;\n  const pageOverlay: HTMLElement = document.querySelectorAll(\n    \".overlay\"\n  )[0] as HTMLElement;\n  const outputImages: HTMLElement = document.querySelectorAll(\n    \".array\"\n  )[0] as HTMLElement;\n  const topMargin: HTMLElement = document.querySelectorAll(\n    \".topMargin\"\n  )[0] as HTMLElement;\n  const leftMargin: HTMLElement = document.querySelectorAll(\n    \".leftMargin\"\n  )[0] as HTMLElement;\n  const tm: HTMLElement = document.querySelectorAll(\".tm\")[0] as HTMLElement;\n  const lm: HTMLElement = document.querySelectorAll(\".lm\")[0] as HTMLElement;\n\n  //Page styling for the image to give real paper effect.\n  const applyPageStyles = () => {\n    if (pageElement) {\n      pageElement.style.border = \"none\";\n      pageElement.style.overflowY = \"hidden\";\n      pageOverlay.style.display = \"block\";\n    }\n\n    if (styles.effect == \"scanned\" && pageOverlay) {\n      pageOverlay.style.background = `linear-gradient(${\n        Math.floor(Math.random() * (120 - 50 + 1)) + 50\n      }deg, #0008, #0000`;\n    } else if (styles.effect == \"shadow\" && pageOverlay) {\n      pageOverlay.style.background = `linear-gradient(${\n        Math.random() * 360\n      }deg, #0008, #0000)`;\n    }\n  };\n\n  const removePageStyles = () => {\n    pageElement.style.border = \"1px solid var(--elevation-background)\";\n    pageElement.style.overflowY = \"hidden\";\n    pageOverlay.style.display = \"none\";\n  };\n\n  // To generate the canvas image of the page.\n  const generateCanvas = async () => {\n    applyPageStyles();\n    const element: HTMLElement = document.querySelectorAll(\n      \"#capture\"\n    )[0] as HTMLElement;\n    const options = {\n      scrollX: 0,\n      scrollY: -window.scrollY,\n      useCORS: true,\n    };\n    await html2canvas(element, options).then((canvas) => {\n        setArray([...array, canvas])\n    });\n    removePageStyles();\n  };\n\n  useEffect(() => {\n    //margin style removal\n    if (styles.margin == false && pageContent) {\n      setTimeout(() => {\n        pageContent.style.paddingLeft = \"15px\";\n        tm.classList.remove(\"topMargin\");\n        lm.classList.remove(\"leftMargin\");\n      }, 300);\n    } else if (styles.margin && pageContent) {\n      setTimeout(() => {\n        pageContent.style.paddingLeft = \"55px\";\n        tm.classList.add(\"topMargin\");\n        lm.classList.add(\"leftMargin\");\n      }, 300);\n    }\n\n    //lines style removal\n    if (styles.lines == false && pageContent) {\n      setTimeout(() => (pageContent.style.backgroundImage = \"none\"), 300);\n    } else if (styles.lines && pageContent) {\n      setTimeout(\n        () =>\n          (pageContent.style.backgroundImage =\n            \"linear-gradient(#999 0.05em, transparent 0.1em)\"),\n        300\n      );\n    }\n  }, [styles.margin, styles.lines]);\n\n  return (\n    <div className=\"w-full flex-1 pl-32 pt-20\">\n      <div className=\"pageContainer flex-1\">\n        <h4 className=\"pb-2 text-sm\">Type/paste text here</h4>\n        <div className=\"pinkMarginedLines\" id=\"capture\">\n          <div className=\"topMargin tm\"></div>\n          <div className=\"midPage flex-col\">\n            <div className=\"leftMargin lm\"></div>\n            <div\n              contentEditable=\"true\"\n              className=\"contentPage cp\"\n              style={{\n                fontSize: `${styles.fontSize}pt`,\n                color: styles.inkColor,\n                fontFamily: `${styles.fontFamily}`,\n                paddingTop: `${styles.verticalSpacing}pt`,\n                // backgroundSize: `100% `\n              }}\n            >\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut\n              rhoncus dui eget tortor feugiat iaculis. Morbi et dolor in felis\n              viverra efficitur. Integer id laoreet arcu. Mauris turpis nibh,\n              scelerisque sed tristique non, hendrerit in erat. Duis interdum\n              nisl risus, ac ultrices ipsum auctor at. Aliquam faucibus iaculis\n              metus sit amet tincidunt. Vestibulum cursus urna vel nunc\n              imperdiet suscipit. Ut eu augue egestas, porta orci lobortis,\n              pharetra orci. Morbi eu tellus quis nisi tempor accumsan nec eu\n              urna. empor, ullamcorper tortor. Mauris quis fermentum augue.\n              Phasellus ac nisl hendrerit, fringilla enim aliquam, placerat\n              odio. Ut tortor nisi, pellentesque sed nisi at, hendrerit\n              imperdiet turpis. Proin interdum porttitor metus at hendrerit.\n              Proin ipsum nisl, lacinia vitae purus ullamcorper, maximus\n              convallis sem. Sed nec lacinia lorem. Duis arcu metus, cursus non\n              odio quis, tincidunt tempor augue. Donec eget vestibulum risus.\n              Nullam blandit quis est vitae feugiat.\n            </div>\n          </div>\n          <div className=\"overlay\"></div>\n        </div>\n      </div>\n      <div className=\"w-full flex items-center\">\n        <button\n          className=\"generateButton mt-10 p-3 text-white rounded-2xl z-10\"\n          onClick={generateCanvas}\n        >\n          Generate Image\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Page;\n","import { useEffect, useState } from \"react\";\nimport Customization from \"./components/Customization\";\nimport FAQ from \"./components/FAQ\";\nimport Header from \"./components/Header\";\nimport Output from \"./components/Output\";\nimport Page from \"./components/Page\";\n\ninterface pageStyle {\n  fontSize: number;\n  effect: string;\n  inkColor: string;\n  fontFamily: string;\n  verticalSpacing: number;\n  margin: boolean;\n  lines: boolean;\n}\n\nconst App: React.FC = () => {\n  useEffect(() => {\n    const checkBoxAuto: HTMLInputElement = document.querySelectorAll(\n      \".checkbox\"\n    )[0] as HTMLInputElement;\n    setTimeout(() => {\n      checkBoxAuto.click();\n      console.log(\"clicked\");\n    }, 200);\n  }, []);\n  const mobile = window.innerWidth < 800 ? true : false;\n  console.log(window.innerWidth)\n  const [styles, setStyles] = useState<pageStyle>({\n    fontSize: 10,\n    effect: \"shadow\",\n    inkColor: \"#000f55\",\n    fontFamily: \"Homemade apple\",\n    verticalSpacing: 3,\n    margin: true,\n    lines: false,\n  });\n  const [array, setArray] = useState<Array<any>>([]);\n\n  return (\n    <>\n      {!mobile ? (\n        <div className=\"App\">\n          <Header />\n          <hr />\n          <div className=\"flex middle\">\n            <Page styles={styles} array={array} setArray={setArray} />\n            <Customization styles={styles} setStyles={setStyles} />\n          </div>\n          <Output array={array} />\n          <FAQ />\n        </div>\n      ) : (\n        <div className=\"h-screen w-screen flex items-center justify-center px-10 font-sans\">\n          <h1>Kindly open this website in your PC or Laptop 🙏. Currently, not supported for mobile browsers. </h1>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './css/features.css'\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}